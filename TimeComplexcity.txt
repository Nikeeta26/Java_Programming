Time complexcity:
      relation between i/p size and rumming time(opration).

    Time complexcity is directly proposion to i/p n;
Type:
1: Best Case
Ex:
    1 2 3 4 5;
    find 1?
       1 in first position.
** it is repesent as  Ω(1);

2:Average Case
Ex:
   5 6 4 2 1 3;
     find 1?
       1+2+3+4+5+6 / 6; (addition of total no/ total no)

    (n+1)/n;
** it is repesent as  θ(n+1)/n;


3:Worst Case
 Ex:
     4 5 6 3 2 1;
        find 1?
      TC is direct;y proposition to no. of i/p
 ** it is repesent as  O(n);

 // when nestead loop that time time coplexcity is multiplication(*);
 // when the seprate loop that time time coplexcity is addition(*);

 ** comparison of time complexcity
          O(n)          O(n^2)           O(n^3)
 n=1       1              1               1
 n=2       2              4               8
 n=3       3              9               27
  .                  
  .
  .
  .
 n=10^5     10^5          10^10          10^30


 Space complexcity
 how many space required in memory

 Space complexity of an algorithm quantifies
  the amount of time taken by a program 
 to run as a function of length of the input.
  It is directly proportional to the largest memory
 your program acquires at any instance during run time. 
For example: int consumes 4 bytes of memory.
